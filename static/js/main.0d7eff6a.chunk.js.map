{"version":3,"sources":["hooks/useInputState.js","TodoForm.js","TodoItem.js","TodoList.js","TodoApp.js","App.js","index.js"],"names":["useInputState","initial","useState","state","setState","event","target","value","TodoForm","props","addTodo","task","changeTask","resetTask","Paper","style","margin","width","onSubmit","preventDefault","label","onChange","fullWidth","TodoItem","todo","todoItem","deleteTodo","editTodo","toggleComplete","editMode","toggleEdit","ListItem","id","Checkbox","checked","isComplete","color","onClick","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","aria-label","TodoList","todos","marginLeft","marginRight","List","length","map","Divider","TodoApp","initialTodos","uuid","setTodos","Grid","container","justify","item","xs","md","lg","idToDelete","tempTodos","filter","idToEdit","newText","tempTodo","idToToggle","newTask","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d7eff6a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction useInputState(initial) {\r\n    const [state, setState] = useState(initial);\r\n    const handleChange = (event) => {\r\n        setState(event.target.value);\r\n    };\r\n    const reset = () => {\r\n        setState(\"\");\r\n    };\r\n    return [state, handleChange, reset];\r\n}\r\n\r\nexport default useInputState;\r\n","import React, { useState } from \"react\";\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Textfield from \"@material-ui/core/Textfield\";\r\n\r\nfunction TodoForm(props) {\r\n    const addTodo = props.addTodo;\r\n    const [task, changeTask, resetTask] = useInputState(\"\");\r\n    return (\r\n        <Paper style={{margin: \"3rem\", width:\"100%\"}}>\r\n            <form onSubmit={(event) => {\r\n                event.preventDefault();\r\n                addTodo(task);\r\n                resetTask();\r\n            }}>\r\n            <Textfield \r\n                label=\"Add a new task\"\r\n                value={task}\r\n                onChange={changeTask}\r\n                fullWidth\r\n            />\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Textfield from \"@material-ui/core/Textfield\";\r\n\r\nfunction TodoItem(props) {\r\n    const todo = props.todoItem;\r\n    const deleteTodo = props.deleteTodo;\r\n    const editTodo = props.editTodo;\r\n    const toggleComplete = props.toggleComplete;\r\n    const [editMode, toggleEdit] = useState(false);\r\n    const [task, changeTask, resetTask] = useInputState(\"\");\r\n    return (\r\n        <ListItem>\r\n            {editMode === true \r\n                ? \r\n                <>\r\n                    <form onSubmit={(event) => {\r\n                        event.preventDefault();\r\n                        editTodo(todo.id, task);\r\n                        toggleEdit(!editMode)\r\n                    }}>\r\n                    <Textfield \r\n                        label={todo.task}\r\n                        value={task}\r\n                        onChange={changeTask}\r\n                    />\r\n                    </form>\r\n                </>\r\n                : \r\n                <>\r\n                    <Checkbox \r\n                        checked={todo.isComplete}\r\n                        style={{color: '#36332f'}}\r\n                        onClick={()=>toggleComplete(todo.id)}\r\n                    />\r\n                    <ListItemText\r\n                        style={{textDecoration: todo.isComplete ? \"Line-through\" : \"\"}}\r\n                    >\r\n                        {todo.task}\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton aria-label=\"Edit\" onClick={() => toggleEdit(!editMode)}>\r\n                            <EditIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"Delete\" onClick={() => deleteTodo(todo.id)}>\r\n                            <DeleteIcon />   \r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </>\r\n            }\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { useState } from \"react\";\r\nimport TodoItem from \"./TodoItem\"\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nfunction TodoList(props) {\r\n    const todos = props.todos;\r\n    const deleteTodo = props.deleteTodo;\r\n    const editTodo = props.editTodo;\r\n    const toggleComplete = props.toggleComplete;\r\n    return (\r\n        <Paper style={{marginLeft:\"3rem\", marginRight:\"3rem\",width:\"100%\"}}>\r\n            <List>\r\n                {todos.length < 1 ? <p style={{marginLeft:\"3rem\"}}>Nothing to do!</p> \r\n                : todos.map((todo) =>\r\n                    <>\r\n                    <TodoItem \r\n                        todoItem={todo}\r\n                        deleteTodo={deleteTodo}\r\n                        editTodo={editTodo}\r\n                        toggleComplete={toggleComplete}\r\n                    />\r\n                    <Divider />\r\n                    </>\r\n                )}\r\n            </List>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useState } from \"react\";\r\nimport uuid from \"uuid/v4\"\r\nimport \"./TodoApp.css\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport TodoList from \"./TodoList\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction TodoApp(props) {\r\n    const initialTodos = [\r\n        {id: uuid(), task: \"Wash the dog!\", isComplete: false},\r\n        {id: uuid(), task: \"Eat!\", isComplete: true}\r\n    ];\r\n    const [todos, setTodos] = useState(initialTodos);\r\n    const addTodo = (newTask) => {\r\n        setTodos([...todos, {id: uuid(), task: newTask, isComplete: false}]);\r\n    };\r\n    const deleteTodo = (idToDelete) => {\r\n        const tempTodos = todos.filter(todo => todo.id !== idToDelete);\r\n        setTodos(tempTodos);\r\n    };\r\n    const editTodo = (idToEdit, newText) => {\r\n        const tempTodo = todos.map(todo => \r\n            todo.id === idToEdit ? {...todo, task: newText} : todo\r\n        );        \r\n        setTodos(tempTodo);\r\n    };\r\n    const toggleComplete = (idToToggle) => {\r\n        const tempTodo = todos.map(todo => \r\n            todo.id === idToToggle ? {...todo, isComplete: !todo.isComplete} : todo\r\n        );\r\n        setTodos(tempTodo);\r\n    };\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <Grid item xs={11} md={8} lg={4}/>\r\n            <TodoList \r\n                todos={todos}\r\n                deleteTodo={deleteTodo}\r\n                editTodo={editTodo}\r\n                toggleComplete={toggleComplete}\r\n            />\r\n            <TodoForm addTodo={addTodo}/>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default TodoApp;\r\n\r\n// manage state for to-dos (id, task, completed?)\r\n// have to-do form\r\n// have to-do list with:\r\n//   to-do items","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport TodoApp from \"./TodoApp\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <h1>To Do:</h1>\n      </div>\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}