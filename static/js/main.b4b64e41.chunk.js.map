{"version":3,"sources":["hooks/useInputState.js","TodoForm.js","TodoItem.js","TodoList.js","TodoApp.js","App.js","index.js"],"names":["useInputState","initial","useState","state","setState","event","target","value","TodoForm","props","addTodo","task","changeTask","resetTask","Paper","style","margin","width","onSubmit","preventDefault","label","onChange","fullWidth","TodoItem","todo","todoItem","deleteTodo","editTodo","toggleComplete","editMode","toggleEdit","ListItem","height","id","autoFocus","marginLeft","Checkbox","checked","isComplete","color","onClick","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","aria-label","TodoList","todos","marginRight","List","length","border","map","TodoApp","initialTodos","JSON","parse","window","localStorage","getItem","uuid","setTodos","useEffect","setItem","stringify","Grid","container","justify","item","xs","md","lg","idToDelete","tempTodos","filter","idToEdit","newText","tempTodo","idToToggle","newTask","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4b64e41.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction useInputState(initial) {\r\n    const [state, setState] = useState(initial);\r\n    const handleChange = (event) => {\r\n        setState(event.target.value);\r\n    };\r\n    const reset = () => {\r\n        setState(\"\");\r\n    };\r\n    return [state, handleChange, reset];\r\n}\r\n\r\nexport default useInputState;\r\n","import React, { useState } from \"react\";\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Textfield from \"@material-ui/core/Textfield\";\r\n\r\nfunction TodoForm(props) {\r\n    const addTodo = props.addTodo;\r\n    const [task, changeTask, resetTask] = useInputState(\"\");\r\n    return (\r\n        <Paper style={{margin: \"3rem\", width:\"100%\"}}>\r\n            <form onSubmit={(event) => {\r\n                event.preventDefault();\r\n                addTodo(task);\r\n                resetTask();\r\n            }}>\r\n            <Textfield \r\n                label=\"Add a new task\"\r\n                value={task}\r\n                onChange={changeTask}\r\n                fullWidth\r\n            />\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Textfield from \"@material-ui/core/Textfield\";\r\n\r\nfunction TodoItem(props) {\r\n    const todo = props.todoItem;\r\n    const deleteTodo = props.deleteTodo;\r\n    const editTodo = props.editTodo;\r\n    const toggleComplete = props.toggleComplete;\r\n    const [editMode, toggleEdit] = useState(false);\r\n    const [task, changeTask, resetTask] = useInputState(\"\");\r\n    return (\r\n        <ListItem style={{height: \"4rem\"}}>\r\n            {editMode === true \r\n                ? \r\n                <>\r\n                    <form style={{width: \"100%\"}}\r\n                        onSubmit={(event) => {\r\n                            event.preventDefault();\r\n                            editTodo(todo.id, task);\r\n                            toggleEdit(!editMode)\r\n                    }}>\r\n                    <Textfield \r\n                        label={todo.task}\r\n                        value={task}\r\n                        onChange={changeTask}\r\n                        autoFocus\r\n                        style={{width: \"90%\", marginLeft: \"1rem\"}}\r\n                    />\r\n                    </form>\r\n                </>\r\n                : \r\n                <>\r\n                    <Checkbox \r\n                        checked={todo.isComplete}\r\n                        style={{color: '#36332f'}}\r\n                        onClick={()=>toggleComplete(todo.id)}\r\n                    />\r\n                    <ListItemText\r\n                        style={{textDecoration: todo.isComplete ? \"Line-through\" : \"\"}}\r\n                    >\r\n                        {todo.task}\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton aria-label=\"Edit\" onClick={() => toggleEdit(!editMode)}>\r\n                            <EditIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"Delete\" onClick={() => deleteTodo(todo.id)}>\r\n                            <DeleteIcon />   \r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </>\r\n            }\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { useState } from \"react\";\r\nimport TodoItem from \"./TodoItem\"\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nfunction TodoList(props) {\r\n    const todos = props.todos;\r\n    const deleteTodo = props.deleteTodo;\r\n    const editTodo = props.editTodo;\r\n    const toggleComplete = props.toggleComplete;\r\n    return (\r\n        <Paper style={{marginLeft:\"3rem\", marginRight:\"3rem\",width:\"100%\"}}>\r\n            <List>\r\n                {todos.length < 1 ? <p style={{marginLeft:\"3rem\", border:\"none\"}}>Nothing to do!</p> \r\n                : todos.map((todo) =>\r\n                    <>\r\n                    <TodoItem \r\n                        todoItem={todo}\r\n                        deleteTodo={deleteTodo}\r\n                        editTodo={editTodo}\r\n                        toggleComplete={toggleComplete}\r\n                    />\r\n                    </>\r\n                )}\r\n            </List>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport uuid from \"uuid/v4\"\r\nimport \"./TodoApp.css\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport TodoList from \"./TodoList\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction TodoApp(props) {\r\n    const initialTodos = JSON.parse(window.localStorage.getItem(\"todos\")\r\n        || [{id: uuid(), task: \"Wash the dog!\", isComplete: false}]\r\n    )\r\n    const [todos, setTodos] = useState(initialTodos);\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    const addTodo = (newTask) => {\r\n        setTodos([...todos, {id: uuid(), task: newTask, isComplete: false}]);\r\n    };\r\n    const deleteTodo = (idToDelete) => {\r\n        const tempTodos = todos.filter(todo => todo.id !== idToDelete);\r\n        setTodos(tempTodos);\r\n    };\r\n    const editTodo = (idToEdit, newText) => {\r\n        const tempTodo = todos.map(todo => \r\n            todo.id === idToEdit ? {...todo, task: newText} : todo\r\n        );        \r\n        setTodos(tempTodo);\r\n    };\r\n    const toggleComplete = (idToToggle) => {\r\n        const tempTodo = todos.map(todo => \r\n            todo.id === idToToggle ? {...todo, isComplete: !todo.isComplete} : todo\r\n        );\r\n        setTodos(tempTodo);\r\n    };\r\n\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <Grid item xs={11} md={8} lg={4}/>\r\n            <TodoList \r\n                todos={todos}\r\n                deleteTodo={deleteTodo}\r\n                editTodo={editTodo}\r\n                toggleComplete={toggleComplete}\r\n            />\r\n            <TodoForm addTodo={addTodo}/>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default TodoApp;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport TodoApp from \"./TodoApp\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <h1>To Do:</h1>\n      </div>\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}